https://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/
  The Single Source of Truth means that we can store the source of a repeated construct in one place and recycle and reuse it without ever actually duplicating it.
  Not establishing a relationship between unrelated rulesets
  *Mix ins without arguments are quite DRY (single source of truth)
  *Only use @extend when the rulesets that you are trying to DRY out are inherently and thematically related. Do not force relationships that do not exist: to do so will create unusual groupings in your project, as well as negatively impacting the source order of your code.

Possible File Structure
  *  /globals – contains Sass files that get applied site-wide like typography, colors, and grids
  *  /components – contains Sass files with component styles like buttons, tables, or input fields
  *  /sections – contains Sass files dedicated to specific pages or areas on a page (might work better combined into the /components/ folder)
  *  /utils – contains third-party utilities like Normalize that can be updated dynamically with tools like Bower.
  main.scss – the primary Sass file in the root folder that imports all others.


  What is the SASS naming convention

  Beware of Nesting, ideally do not nest deeper than 3 levels, instead you can indent to make the code more readable

Loops

Maps

Modularization
  Modularization is the process of breaking down a project into smaller modules. This can be accomplished in Sass using partials.

  Module: http://thesassway.com/intermediate/a-standard-module-definition-for-sass
    * each module has one function, e.g. button, typography, forms, table
    * importing a module should never automatically output code. Hence, limits modules to mixins, variable definitions and functions
    * primary mixin
    * primary mixin should inherit name of the module
    * Use default for top level variables


ZURB Foundation, front end framework: https://github.com/zurb/foundation-sites



